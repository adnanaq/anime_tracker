/* ExpandableGrid Component Styles using Design Tokens */

/* ========================================
   EXPANDABLE GRID STYLES
   ======================================== */

.expandable-grid-container {
  display: grid;
  grid-template-columns:
    var(--col-1, 1fr)
    var(--col-2, 1fr)
    var(--col-3, 1fr)
    var(--col-4, 1fr)
    var(--col-5, 1fr)
    var(--col-6, 1fr)
    var(--col-7, 1fr)
    var(--col-8, 1fr)
    var(--col-9, 1fr)
    var(--col-10, 1fr);
  grid-template-rows: 23rem;
  transition: grid-template-columns 2s
    linear(
      0,
      0.01,
      0.04 1.6%,
      0.161 3.3%,
      0.816 9.4%,
      1.046,
      1.189 14.4%,
      1.231,
      1.254 17%,
      1.259,
      1.257 18.6%,
      1.236,
      1.194 22.3%,
      1.057 27%,
      0.999 29.4%,
      0.955 32.1%,
      0.942,
      0.935 34.9%,
      0.933,
      0.939 38.4%,
      1 47.3%,
      1.011,
      1.017 52.6%,
      1.016 56.4%,
      1 65.2%,
      0.996 70.2%,
      1.001 87.2%,
      1
    );
  gap: 16px;
}

.expandable-grid-card {
  position: relative;
}

.expandable-grid-card .card-radio {
  position: absolute;
  width: 100%;
  height: 100%;
  inset: 0;
  z-index: 5;
  opacity: 0;
  cursor: pointer;
}

/* Allow clicks through to expanded content */
.expandable-grid-card:has(.card-radio:checked) .card-radio {
  pointer-events: none;
}

/* Ensure expanded content can receive clicks */
.expandable-grid-card:has(.card-radio:checked) .card-expanded-overlay {
  pointer-events: auto;
}

.expandable-grid-card .card-image-container {
  position: relative;
  overflow: hidden;
}

.expandable-grid-card .card-image-container img {
  object-position: top center;
}

.expandable-grid-card .card-overlay-hover {
  transition: opacity 0.3s ease-in-out;
}

.expandable-grid-card:hover .card-overlay-hover {
  opacity: 1;
}

.expandable-grid-card .card-expanded-overlay {
  transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 15;
  pointer-events: none;
}

/* Hide hover overlay when card is expanded or being hovered */
.expandable-grid-container:has(.expandable-grid-card .card-radio:checked)
  .expandable-grid-card
  .card-overlay-hover,
.expandable-grid-card:hover .card-overlay-hover {
  opacity: 0 !important;
}

/* Score badge fade out animation */
.card-score-badge {
  transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Hide score badge when card is expanded OR on hover */
.expandable-grid-card:has(.card-radio:checked) .card-score-badge,
.expandable-grid-card:hover .card-score-badge {
  opacity: 0;
}

/* Show expanded content when radio is checked OR on hover */
.expandable-grid-card:has(.card-radio:checked) .card-expanded-overlay,
.expandable-grid-card:hover .card-expanded-overlay {
  opacity: 1;
}

/* Expanded content styling */
.expanded-content {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
}

.expanded-content-inner {
  width: 100%;
  max-width: 500px;
  padding-right: 20px;
  height: 100%;
  position: relative;
  overflow: hidden;
}

/* Status and format badges animation */
.expanded-content-inner span[class*="bg-"] {
  transition: all 0.3s ease-in-out;
  transform: scale(1);
}

.expanded-content-inner span[class*="bg-"]:hover {
  transform: scale(1.05);
  filter: brightness(1.1);
}

/* Badge hierarchy styling */
.expanded-content-inner .episode-status-row {
  min-height: 20px; /* Reserve space for future episode status badges */
}

/* Primary status badges (release status) - more prominent */
.expanded-content-inner span[class*="rounded-full"] {
  font-weight: 600;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Secondary badges (format) - more subtle */
.expanded-content-inner span[class*="rounded-md"] {
  font-weight: 500;
  opacity: 0.9;
}

/* Future episode status badges will use distinct styling */
.episode-status-row span {
  /* Will be styled with rounded-lg, different colors, and pulsing animations for live content */
}

/* Hide scrollbars */
.card-expanded-overlay > div {
  overflow: hidden !important;
}

/* Scrolling text animation for synopsis */
.scrolling-synopsis {
  overflow: hidden;
  height: 120px; /* Increased from 80px to 120px */
  position: relative;
  background: rgba(0, 0, 0, 0.2);
  border-radius: var(--radius-lg);
  padding: var(--space-3) var(--space-4); /* Increased padding for better spacing */
}

.scrolling-synopsis p {
  display: block;
  white-space: normal;
  word-wrap: break-word;
  line-height: 1.7;
  font-size: 13px;
  text-align: justify;
  hyphens: auto;
  margin: 0;
  padding: 0;
}

.scrolling-synopsis.long-text {
  mask-image: linear-gradient(
    to bottom,
    transparent 0%,
    black 15%,
    black 85%,
    transparent 100%
  );
  -webkit-mask-image: linear-gradient(
    to bottom,
    transparent 0%,
    black 15%,
    black 85%,
    transparent 100%
  );
}

.scrolling-synopsis.long-text p {
  animation: at-text-scroll 30s linear infinite;
  animation-delay: 3s;
  transform: translateY(0);
}

/* Using consolidated at-text-scroll from design-tokens.css */

.scrolling-synopsis.short-text {
  height: auto;
  max-height: 120px; /* Increased to match the regular synopsis height */
}

.scrolling-synopsis.short-text p {
  animation: none;
  transform: none;
}

/* Reset animation when card is not expanded or hovered */
.expandable-grid-card:not(:has(.card-radio:checked)):not(:hover)
  .scrolling-synopsis.long-text
  p {
  animation: none;
  transform: translateY(0);
}

/* Start animation when card is expanded (clicked) OR hovered */
.expandable-grid-card:has(.card-radio:checked) .scrolling-synopsis.long-text p,
.expandable-grid-card:hover .scrolling-synopsis.long-text p {
  animation: at-text-scroll 25s linear infinite;
  animation-delay: 2s;
}

/* Grid expansion states using :has() selector - Click */
.expandable-grid-container:has(
    .expandable-grid-card:nth-child(1) > .card-radio:checked
  ) {
  --col-1: 4fr;
  --col-2: 1.5fr;
}

/* Grid expansion states on hover */
.expandable-grid-container:has(.expandable-grid-card:nth-child(1):hover) {
  --col-1: 4fr;
  --col-2: 1.5fr;
}

.expandable-grid-container:has(
    .expandable-grid-card:nth-child(2) > .card-radio:checked
  ) {
  --col-1: 1.5fr;
  --col-2: 4fr;
  --col-3: 1.5fr;
}

.expandable-grid-container:has(.expandable-grid-card:nth-child(2):hover) {
  --col-1: 1.5fr;
  --col-2: 4fr;
  --col-3: 1.5fr;
}

.expandable-grid-container:has(
    .expandable-grid-card:nth-child(3) > .card-radio:checked
  ) {
  --col-2: 1.5fr;
  --col-3: 4fr;
  --col-4: 1.5fr;
}

.expandable-grid-container:has(.expandable-grid-card:nth-child(3):hover) {
  --col-2: 1.5fr;
  --col-3: 4fr;
  --col-4: 1.5fr;
}

.expandable-grid-container:has(
    .expandable-grid-card:nth-child(4) > .card-radio:checked
  ) {
  --col-3: 1.5fr;
  --col-4: 4fr;
  --col-5: 1.5fr;
}

.expandable-grid-container:has(.expandable-grid-card:nth-child(4):hover) {
  --col-3: 1.5fr;
  --col-4: 4fr;
  --col-5: 1.5fr;
}

.expandable-grid-container:has(
    .expandable-grid-card:nth-child(5) > .card-radio:checked
  ) {
  --col-4: 1.5fr;
  --col-5: 4fr;
  --col-6: 1.5fr;
}

.expandable-grid-container:has(.expandable-grid-card:nth-child(5):hover) {
  --col-4: 1.5fr;
  --col-5: 4fr;
  --col-6: 1.5fr;
}

.expandable-grid-container:has(
    .expandable-grid-card:nth-child(6) > .card-radio:checked
  ) {
  --col-5: 1.5fr;
  --col-6: 4fr;
  --col-7: 1.5fr;
}

.expandable-grid-container:has(
    .expandable-grid-card:nth-child(7) > .card-radio:checked
  ) {
  --col-6: 1.5fr;
  --col-7: 4fr;
  --col-8: 1.5fr;
}

.expandable-grid-container:has(
    .expandable-grid-card:nth-child(8) > .card-radio:checked
  ) {
  --col-7: 1.5fr;
  --col-8: 4fr;
  --col-9: 1.5fr;
}

.expandable-grid-container:has(
    .expandable-grid-card:nth-child(9) > .card-radio:checked
  ) {
  --col-8: 1.5fr;
  --col-9: 4fr;
  --col-10: 1.5fr;
}

.expandable-grid-container:has(
    .expandable-grid-card:nth-child(10) > .card-radio:checked
  ) {
  --col-9: 1.5fr;
  --col-10: 4fr;
}

/* Ripple Effect Animation - Options jump out from button position */
.status-options-container {
  position: relative;
}

.status-dropdown-overlay {
  position: absolute;
  bottom: 100%;
  left: 0;
  width: calc(50% - 4px); /* Same width as trigger button (flex-1 with gap) */
  margin-bottom: 12px;
  z-index: 30;
  pointer-events: none;
}

.status-options-list {
  display: flex;
  flex-direction: column-reverse; /* Reverse so first item is at bottom */
  gap: 4px;
}

.status-option-item {
  opacity: 0;
  pointer-events: none;
  position: relative;
}

/* Each option starts at the button position (bottom) */
.status-option-item:nth-child(1) {
  transform: translateY(120px) scale(0.3); /* Start from button position */
}

.status-option-item:nth-child(2) {
  transform: translateY(110px) scale(0.3);
}

.status-option-item:nth-child(3) {
  transform: translateY(100px) scale(0.3);
}

.status-option-item:nth-child(4) {
  transform: translateY(90px) scale(0.3);
}

.status-option-item:nth-child(5) {
  transform: translateY(80px) scale(0.3);
}

.status-option-item:nth-child(6) {
  transform: translateY(70px) scale(0.3);
}

.status-option-item:nth-child(7) {
  transform: translateY(60px) scale(0.3);
}

.status-option-item:nth-child(8) {
  transform: translateY(50px) scale(0.3);
}

.status-option-item button {
  background: rgba(0, 0, 0, 0.95);
  backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: var(--shadow-2xl);
}

/* Animation keyframes for each position */
/* Using consolidated at-jump-in animation from design-tokens.css */

/* Using consolidated at-jump-out animation from design-tokens.css */

/* Special animation for selected status - takes over the dropdown */
@keyframes selectedTakeover {
  0% {
    transform: translateY(0px) scale(1);
    opacity: 1;
    width: calc(50% - 4px);
  }
  100% {
    transform: translateY(50px) scale(1.8);
    opacity: 1;
    width: calc(100% - 8px); /* Grow to match button width */
  }
}

/* Apply opening animations */
.status-options-animate .status-option-item:nth-child(1) {
  --jump-distance: 120px;
  animation: at-jump-in 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  animation-fill-mode: forwards;
  animation-delay: 0.05s;
  pointer-events: auto;
}

.status-options-animate .status-option-item:nth-child(2) {
  --jump-distance: 110px;
  animation: at-jump-in 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  animation-fill-mode: forwards;
  animation-delay: 0.1s;
  pointer-events: auto;
}

.status-options-animate .status-option-item:nth-child(3) {
  --jump-distance: 100px;
  animation: at-jump-in 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  animation-fill-mode: forwards;
  animation-delay: 0.15s;
  pointer-events: auto;
}

.status-options-animate .status-option-item:nth-child(4) {
  --jump-distance: 90px;
  animation: at-jump-in 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  animation-fill-mode: forwards;
  animation-delay: 0.2s;
  pointer-events: auto;
}

.status-options-animate .status-option-item:nth-child(5) {
  --jump-distance: 80px;
  animation: at-jump-in 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  animation-fill-mode: forwards;
  animation-delay: 0.25s;
  pointer-events: auto;
}

.status-options-animate .status-option-item:nth-child(6) {
  --jump-distance: 70px;
  animation: at-jump-in 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  animation-fill-mode: forwards;
  animation-delay: 0.3s;
  pointer-events: auto;
}

.status-options-animate .status-option-item:nth-child(7) {
  --jump-distance: 60px;
  animation: at-jump-in 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  animation-fill-mode: forwards;
  animation-delay: 0.35s;
  pointer-events: auto;
}

.status-options-animate .status-option-item:nth-child(8) {
  --jump-distance: 50px;
  animation: at-jump-in 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  animation-fill-mode: forwards;
  animation-delay: 0.4s;
  pointer-events: auto;
}

/* Apply closing animations - same order as opening (first out, first in) */
.status-options-closing .status-option-item:nth-child(1) {
  --jump-distance: 50px;
  animation: at-jump-out 0.3s ease-in;
  animation-fill-mode: forwards;
  animation-delay: 0s;
  pointer-events: none;
  z-index: -1; /* Go behind the dropdown button */
}

.status-options-closing .status-option-item:nth-child(2) {
  --jump-distance: 50px;
  animation: at-jump-out 0.3s ease-in;
  animation-fill-mode: forwards;
  animation-delay: 0.05s;
  pointer-events: none;
  z-index: -1;
}

.status-options-closing .status-option-item:nth-child(3) {
  --jump-distance: 50px;
  animation: at-jump-out 0.3s ease-in;
  animation-fill-mode: forwards;
  animation-delay: 0.1s;
  pointer-events: none;
  z-index: -1;
}

.status-options-closing .status-option-item:nth-child(4) {
  --jump-distance: 50px;
  animation: at-jump-out 0.3s ease-in;
  animation-fill-mode: forwards;
  animation-delay: 0.15s;
  pointer-events: none;
  z-index: -1;
}

.status-options-closing .status-option-item:nth-child(5) {
  --jump-distance: 50px;
  animation: at-jump-out 0.3s ease-in;
  animation-fill-mode: forwards;
  animation-delay: 0.2s;
  pointer-events: none;
  z-index: -1;
}

.status-options-closing .status-option-item:nth-child(6) {
  --jump-distance: 50px;
  animation: at-jump-out 0.3s ease-in;
  animation-fill-mode: forwards;
  animation-delay: 0.25s;
  pointer-events: none;
  z-index: -1;
}

.status-options-closing .status-option-item:nth-child(7) {
  --jump-distance: 50px;
  animation: at-jump-out 0.3s ease-in;
  animation-fill-mode: forwards;
  animation-delay: 0.3s;
  pointer-events: none;
  z-index: -1;
}

.status-options-closing .status-option-item:nth-child(8) {
  --jump-distance: 50px;
  animation: at-jump-out 0.3s ease-in;
  animation-fill-mode: forwards;
  animation-delay: 0.35s;
  pointer-events: none;
  z-index: -1;
}

/* Special styling for the newly selected option during closing */
.status-option-item.selected-option {
  /* Override any other animations when selected */
  animation: none !important;
  opacity: 1 !important;
  transform: translateY(0px) scale(1) !important;
  z-index: 100 !important;
  pointer-events: none;
  position: relative;
}

/* Apply the takeover animation after delay */
.status-option-item.selected-option.takeover-ready {
  animation: selectedTakeover 0.6s ease-out !important;
  animation-fill-mode: forwards !important;
  animation-delay: 0s !important; /* No delay since we trigger it manually */
  z-index: 100 !important;
}

/* Click Mode - Individual Card Layout (Keep Original Dimensions) */
.expandable-grid-container.click-mode {
  display: flex;
  width: 100%;
  height: 23rem;
  gap: 16px;
  transition: none;
  overflow-x: auto;
  overflow-y: hidden;
  scroll-behavior: smooth;
  cursor: grab;
  user-select: none;
  -webkit-overflow-scrolling: touch; /* iOS smooth scrolling */
  scroll-snap-type: x mandatory; /* Snap to card positions */

  /* Subtle fade at edges - keep cards readable */
  mask-image: linear-gradient(
    to right,
    transparent 0%,
    black 3%,
    black 97%,
    transparent 100%
  );
  -webkit-mask-image: linear-gradient(
    to right,
    transparent 0%,
    black 3%,
    black 97%,
    transparent 100%
  );
}

.expandable-grid-container.click-mode:active {
  cursor: grabbing;
}

/* Hide scrollbar but keep functionality */
.expandable-grid-container.click-mode::-webkit-scrollbar {
  display: none;
}

.expandable-grid-container.click-mode {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.expandable-grid-container.click-mode .expandable-grid-card {
  /* Collapsed state - fixed width matching original grid cards */
  flex: 0 0 auto;
  width: 200px; /* Fixed width matching original card dimensions */
  transition: width 0.7s ease-in;
  border-radius: 12px;
  overflow: hidden;
  scroll-snap-align: start; /* Snap each card to start position */
}

.expandable-grid-container.click-mode .expandable-grid-card.active {
  /* Expanded state - fixed width matching original expanded dimensions */
  width: 480px; /* Fixed expanded width matching original 4fr expansion */
}

/* Disable hover effects in click mode */
.expandable-grid-container.click-mode
  .expandable-grid-card:hover
  .card-overlay-hover {
  opacity: 0 !important;
}

.expandable-grid-container.click-mode
  .expandable-grid-card:hover
  .card-score-badge {
  opacity: 1 !important;
}

.expandable-grid-container.click-mode
  .expandable-grid-card:hover
  .card-expanded-overlay {
  opacity: 0 !important;
}

/* Show expanded content only when active in click mode */
.expandable-grid-container.click-mode
  .expandable-grid-card.active
  .card-expanded-overlay {
  opacity: 1 !important;
  pointer-events: auto !important;
}

.expandable-grid-container.click-mode
  .expandable-grid-card.active
  .card-score-badge {
  opacity: 0 !important;
}

/* Hide expanded content for non-active cards in click mode */
.expandable-grid-container.click-mode
  .expandable-grid-card:not(.active)
  .card-expanded-overlay {
  opacity: 0 !important;
}

.expandable-grid-container.click-mode
  .expandable-grid-card:not(.active)
  .card-score-badge {
  opacity: 1 !important;
}

/* Hide radio buttons in click mode */
.expandable-grid-container.click-mode .card-radio {
  display: none;
}

/* Responsive breakpoints to match existing grid layouts */
@media (max-width: 640px) {
  .expandable-grid-container {
    grid-template-columns: var(--col-1, 1fr) var(--col-2, 1fr);
  }

  .expandable-grid-container:has(
      .expandable-grid-card:nth-child(1) > .card-radio:checked
    ) {
    --col-1: 2fr;
    --col-2: 1fr;
  }

  .expandable-grid-container:has(
      .expandable-grid-card:nth-child(2) > .card-radio:checked
    ) {
    --col-1: 1fr;
    --col-2: 2fr;
  }
}

@media (min-width: 641px) and (max-width: 768px) {
  .expandable-grid-container {
    grid-template-columns: var(--col-1, 1fr) var(--col-2, 1fr) var(--col-3, 1fr);
  }
}

@media (min-width: 769px) and (max-width: 1024px) {
  .expandable-grid-container {
    grid-template-columns: var(--col-1, 1fr) var(--col-2, 1fr) var(--col-3, 1fr) var(
        --col-4,
        1fr
      );
  }
}

@media (min-width: 1025px) {
  .expandable-grid-container {
    grid-template-columns:
      var(--col-1, 1fr)
      var(--col-2, 1fr)
      var(--col-3, 1fr)
      var(--col-4, 1fr)
      var(--col-5, 1fr);
  }
}
