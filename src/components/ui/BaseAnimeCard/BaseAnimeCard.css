/* BaseAnimeCard CSS - matches ExpandableGrid radio button pattern */
/* HORIZONTAL EXPANSION ONLY - height never changes */

/* Card expands to custom width when its radio button is checked AND expandable */
.base-anime-card:has(input[type="radio"]:checked):not(.non-expandable) {
  width: var(--expanded-width, 480px) !important;
  /* Height remains unchanged during expansion */
}

/* Non-expandable cards maintain their original width even when radio is checked */
.base-anime-card.non-expandable {
  /* Keeps the original width set in style prop */
  /* Height always remains constant */
}

/* Card collapses to original width when any other radio in the same group is checked */
.base-anime-card:has(input[type="radio"]:not(:checked)) {
  width: var(--original-width, 200px) !important;
  /* Height remains unchanged during collapse */
}

/* Smooth transition for width changes */
.base-anime-card {
  /* Bounce-back effect (overshoot and settle) */
  transition: width 1.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);

  /* Other easing options */
  /* transition: width 1.2s ease-in-out; */
  /* transition: width 0.7s ease-in; */
}

/* Hide the radio button completely */
.base-anime-card input[type="radio"] {
  position: absolute;
  opacity: 0;
  pointer-events: none;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

/* Image positioning to match ExpandableGrid */
.base-anime-card .card-image-container img {
  object-position: top center;
}

/* Text truncation utility for title */
.base-anime-card .line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Override Storybook typography fix for BaseAnimeCard context */
/* The Typography component gets a dark background in Storybook for visibility, */
/* but we want transparent background since we have our own gradient overlay */
.base-anime-card .at-typography-base.text-white {
  background-color: transparent !important;
  padding: 0 !important;
  border-radius: 0 !important;
}

/* Expanded content overlay - hidden by default */
.base-anime-card .card-expanded-overlay {
  opacity: 0;
  transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  pointer-events: none;
}

/* Show expanded content when card radio is checked OR when card has expanded class (but radio takes precedence) */
.base-anime-card.expanded .card-expanded-overlay {
  opacity: 1;
  pointer-events: auto;
}

.base-anime-card:has(input[type="radio"]:checked) .card-expanded-overlay {
  opacity: 1;
  pointer-events: auto;
}

/* Hide expanded content when radio is unchecked (overrides expanded class) */
.base-anime-card:has(input[type="radio"]:not(:checked)) .card-expanded-overlay {
  opacity: 0;
  pointer-events: none;
}

/* Base state content (score badge, status badge, and bottom info) - visible by default */
.base-anime-card .card-score-badge,
.base-anime-card .card-status-badge,
.base-anime-card .absolute.bottom-0 {
  opacity: 1;
  transition: opacity 0.4s ease-out;
}

/* Hide base content when card is expanded */
.base-anime-card.expanded .card-score-badge,
.base-anime-card.expanded .card-status-badge,
.base-anime-card.expanded .absolute.bottom-0 {
  opacity: 0;
}

.base-anime-card:has(input[type="radio"]:checked) .card-score-badge,
.base-anime-card:has(input[type="radio"]:checked) .card-status-badge,
.base-anime-card:has(input[type="radio"]:checked) .absolute.bottom-0 {
  opacity: 0;
}

/* Show base content when radio is unchecked (overrides expanded class) */
.base-anime-card:has(input[type="radio"]:not(:checked)) .card-score-badge,
.base-anime-card:has(input[type="radio"]:not(:checked)) .card-status-badge,
.base-anime-card:has(input[type="radio"]:not(:checked)) .absolute.bottom-0 {
  opacity: 1;
}

